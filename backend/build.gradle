plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
}

group = 'be.ugent.gsr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly('org.postgresql:postgresql')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.hibernate.orm:hibernate-jpamodelgen')
    implementation('org.hibernate.orm:hibernate-core')
    implementation('org.hibernate.validator:hibernate-validator')
    implementation('jakarta.mail:jakarta.mail-api')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.graphql:spring-graphql')
    implementation('org.springframework.ldap:spring-ldap-core')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.apache.pdfbox:pdfbox:2.0.27')
    implementation('io.jsonwebtoken:jjwt-api:0.11.5')
    implementation('io.jsonwebtoken:jjwt-impl:0.11.5')
    implementation('io.jsonwebtoken:jjwt-jackson:0.11.5')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    developmentOnly('org.springframework.boot:spring-boot-docker-compose')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

tasks.withType(Test) {
    useJUnitPlatform()
}
